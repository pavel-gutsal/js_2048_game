{"version":3,"sources":["scripts/functions.js","scripts/main.js"],"names":["toRowArray","singleArray","newArray","i","row","j","push","toColumnArray","column","rowToSingleArray","rowArray","columnsToSingleArray","columnArray","tbody","document","querySelector","messageStart","messageWin","messageLose","btnStart","gameScore","Array","fill","rowsArray","hidden","gamePlay","rerender","innerHTML","tr","createElement","classList","add","td","appendChild","randomCell","emptyArray","map","el","index","filter","randomIndex","Math","floor","random","length","randomValue","array","condition","sortedArray","subArray","numbersArray","combine","combinedArray","combined","Number","gameOverCheck","sameValue","possibleMoves","gameWin","addEventListener","e","remove","move","side","key"],"mappings":"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","file":"main.0e870b49.js","sourceRoot":"..\\src","sourcesContent":["const toRowArray = (singleArray) => {\n  const newArray = [];\n\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = i * 4; j < 4 + i * 4; j++) {\n      row.push(singleArray[j]);\n    }\n    newArray.push(row);\n  }\n\n  return newArray;\n};\n\nconst toColumnArray = (singleArray) => {\n  const newArray = [];\n\n  for (let i = 0; i < 4; i++) {\n    const column = [];\n\n    for (let j = i; j < 16; j += 4) {\n      column.push(singleArray[j]);\n    }\n    newArray.push(column);\n  }\n\n  return newArray;\n};\n\nconst rowToSingleArray = (rowArray) => {\n  let newArray = [];\n\n  for (const row of rowArray) {\n    newArray = [...newArray, ...row];\n  }\n\n  return newArray;\n};\n\nconst columnsToSingleArray = (columnArray) => {\n  const newArray = [];\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      newArray[ j * 4 + i ] = columnArray[i][j];\n    }\n  }\n\n  return newArray;\n};\n\nexport { toRowArray, toColumnArray, rowToSingleArray, columnsToSingleArray };\n","// write your code here\n\nimport\n{ toRowArray, toColumnArray, rowToSingleArray, columnsToSingleArray }\n  from './functions.js';\n\nconst tbody = document.querySelector(`tbody`);\nconst messageStart = document.querySelector(`.message-start`);\nconst messageWin = document.querySelector(`.message-win`);\nconst messageLose = document.querySelector(`.message-lose`);\nconst btnStart = document.querySelector(`.start`);\nconst gameScore = document.querySelector(`.game-score`);\n\nlet singleArray = new Array(16).fill('');\nlet rowsArray = toRowArray(singleArray);\nlet columnArray = toColumnArray(singleArray);\n\nmessageLose.hidden = true;\nmessageWin.hidden = true;\n\nlet gamePlay = false;\n\nconst rerender = () => {\n  tbody.innerHTML = ``;\n\n  for (let i = 0; i < 4; i++) {\n    const tr = document.createElement(`tr`);\n\n    tr.classList.add(`field-row`);\n\n    for (let j = i * 4; j < i * 4 + 4; j++) {\n      const td = document.createElement('td');\n\n      td.classList.add(`field-cell`);\n\n      if (singleArray[j] !== '') {\n        td.innerHTML = singleArray[j];\n        td.classList.add(`field-cell--${singleArray[j]}`);\n      }\n      tr.appendChild(td);\n    };\n    tbody.appendChild(tr);\n  }\n};\n\nconst randomCell = () => {\n  const emptyArray = singleArray\n    .map((el, index) => {\n      if (el === '') {\n        return index;\n      }\n    })\n    .filter(el => el);\n\n  const randomIndex = Math.floor(Math.random() * emptyArray.length);\n\n  const randomValue = (Math.floor(Math.random() * 10) + 1) === 1 ? 4 : 2;\n\n  singleArray[ emptyArray[randomIndex] ] = randomValue;\n};\n\nconst push = (array, condition) => {\n  const sortedArray = [];\n\n  for (const subArray of array) {\n    const emptyArray = subArray.filter(el => el === '');\n    const numbersArray = subArray.filter(el => el !== '');\n\n    if (condition === 'Left' || condition === 'Up') {\n      sortedArray.push([...numbersArray, ...emptyArray]);\n    } else {\n      sortedArray.push([...emptyArray, ...numbersArray]);\n    }\n  }\n\n  return sortedArray;\n};\n\nconst combine = (array) => {\n  const combinedArray = [];\n\n  for (const subArray of array) {\n    let combined = false;\n\n    for (let i = 0; i < 3; i++) {\n      if (\n        subArray[i] === subArray[ i + 1 ]\n        && subArray[i] !== ''\n        && !combined\n      ) {\n        gameScore.innerHTML = Number(gameScore.innerHTML) + subArray[i] * 2;\n        subArray[i] *= 2;\n        subArray[ i + 1 ] = '';\n        combined = true;\n      }\n    }\n    combinedArray.push(subArray);\n  }\n\n  return combinedArray;\n};\n\nconst gameOverCheck = () => {\n  const emptyArray = singleArray.filter(el => el === '');\n\n  if (emptyArray.length > 0) {\n    return;\n  };\n\n  const sameValue = (array) => {\n    let possibleMoves = false;\n\n    for (const subArray of array) {\n      for (let i = 0; i < 3; i++) {\n        if (subArray[i] === subArray[ i + 1 ]) {\n          possibleMoves = true;\n        }\n      }\n    }\n\n    return possibleMoves;\n  };\n\n  if (!sameValue(rowsArray) && !sameValue(columnArray)) {\n    messageLose.hidden = false;\n    gamePlay = false;\n  }\n};\n\nconst gameWin = () => {\n  for (const el of singleArray) {\n    if (el === 2048) {\n      messageWin.hidden = false;\n      gamePlay = false;\n\n      return true;\n    }\n  }\n\n  return false;\n};\n\nbtnStart.addEventListener(`click`, function(e) {\n  btnStart.innerHTML = 'Restart';\n  btnStart.classList.add(`restart`);\n  btnStart.classList.remove(`start`);\n  gamePlay = true;\n  gameScore.innerHTML = '0';\n  singleArray = new Array(16).fill('');\n\n  messageLose.hidden = true;\n  messageWin.hidden = true;\n  messageStart.hidden = true;\n  randomCell();\n  randomCell();\n  rerender();\n  rowsArray = toRowArray(singleArray);\n  columnArray = toColumnArray(singleArray);\n});\n\ndocument.addEventListener(`keydown`, function(e) {\n  if (!gamePlay) {\n    return;\n  }\n\n  const move = (condition, side) => {\n    if (side === 'Horizontal') {\n      rowsArray = push(rowsArray, condition);\n      rowsArray = combine(rowsArray);\n      rowsArray = push(rowsArray, condition);\n      singleArray = rowToSingleArray(rowsArray);\n    } else {\n      columnArray = push(columnArray, condition);\n      columnArray = combine(columnArray);\n      columnArray = push(columnArray, condition);\n      singleArray = columnsToSingleArray(columnArray);\n    }\n\n    randomCell();\n    rerender();\n    rowsArray = toRowArray(singleArray);\n    columnArray = toColumnArray(singleArray);\n\n    if (!gameWin()) {\n      gameOverCheck();\n    }\n  };\n\n  if (e.key === 'ArrowLeft') {\n    move('Left', 'Horizontal');\n  }\n\n  if (e.key === 'ArrowRight') {\n    move('Right', 'Horizontal');\n  }\n\n  if (e.key === 'ArrowUp') {\n    move('Up', 'Vertical');\n  }\n\n  if (e.key === 'ArrowDown') {\n    move('Down', 'Vertical');\n  }\n});\n"]}